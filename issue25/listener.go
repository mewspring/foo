// generated by Textmapper; DO NOT EDIT

package issue25

import (
	"fmt"
)

type NodeType int

type Listener func(t NodeType, offset, endoffset int)

const (
	NoType NodeType = iota
	Foo  // Bars=(ID)+ Bar=ID
	ID
	NodeTypeMax
)

var nodeTypeStr = [...]string{
	"NONE",
	"Foo",
	"ID",
}

func (t NodeType) String() string {
	if t >= 0 && int(t) < len(nodeTypeStr) {
		return nodeTypeStr[t]
	}
	return fmt.Sprintf("node(%d)", t)
}

var ruleNodeType = [...]NodeType{
	Foo, // Foo : 'cs' ID_list 'delim' ID
	0, // ID_list : ID_list ID
	0, // ID_list : ID
	ID, // ID : id_tok
}

