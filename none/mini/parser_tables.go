// generated by Textmapper; DO NOT EDIT

package mini

import (
	"fmt"
)

// Symbol represents a set of all terminal and non-terminal symbols of the llvm language.
type Symbol int

var symbolStr = [...]string{
	"GlobalIdent",
	"LocalIdent",
	"IntLit",
	"Module",
	"TopLevelEntity_optlist",
	"TopLevelEntity",
	"FooBaz",
	"FuncDef",
	"FuncHeader",
	"BasicBlock_list",
	"FuncBody",
	"Type",
	"FirstClassType",
	"ConcreteType",
	"VoidType",
	"IntType",
	"FloatType",
	"FloatKind",
	"Value",
	"Constant",
	"IntConst",
	"BasicBlock",
	"Instruction_optlist",
	"Instruction",
	"LocalDefInst",
	"ValueInstruction",
	"AddInst",
	"CallInst",
	"Terminator",
	"FooBar",
	"RetTerm",
	"Args",
	"FuncMetadata",
	"InstMetadata",
	"OperandBundles",
	"Params",
	"TypeValue",
}

func (n Symbol) String() string {
	if n < Symbol(NumTokens) {
		return Token(n).String()
	}
	i := int(n) - int(NumTokens)
	if i < len(symbolStr) {
		return symbolStr[i]
	}
	return fmt.Sprintf("nonterminal(%d)", n)
}

var tmAction = []int32{
	-3, -11, -1, 8, 4, 7, 6, 20, 24, 23, 26, 22, 27, 19, 25, -19,
	-1, 15, 16, 14, 17, 18, 21, -1, 0, -1, -23, 9, -35, -39, 12, -1,
	-1, 13, 11, 1, -1, -1, -1, 45, -1, 34, 36, 37, 39, 40, 33, 44,
	43, 10, -1, -1, -1, -53, -1, 2, 31, 29, 32, 52, 28, 30, -1, -1,
	46, 38, -67, -79, 41, -1, -83, -95, 42, -1, -2,
}

var tmLalr = []int32{
	0, 5, 14, 5, 24, 5, -1, -2, 14, -1, 24, -1, 0, 3, -1, -2,
	8, 48, -1, -2, 3, 35, 12, 35, 13, 35, 20, 35, 23, 35, -1, -2,
	7, 51, -1, -2, 9, -1, 3, 35, 12, 35, 13, 35, 20, 35, 23, 35,
	-1, -2, 3, 49, 9, 49, 12, 49, 13, 49, 20, 49, 23, 49, -1, -2,
	3, 49, 12, 49, 13, 49, 20, 49, 23, 49, -1, -2, 7, 47, -1, -2,
	3, 50, 12, 50, 13, 50, 20, 50, 23, 50, -1, -2, 3, 49, 12, 49,
	13, 49, 20, 49, 23, 49, -1, -2,
}

var tmGoto = []int32{
	0, 2, 2, 10, 18, 24, 30, 34, 38, 40, 42, 44, 46, 50, 54, 56,
	62, 68, 74, 80, 86, 88, 94, 100, 102, 104, 112, 120, 126, 128, 130, 132,
	134, 136, 138, 140, 142, 146, 152, 158, 164, 170, 176, 182, 188, 194, 200, 204,
	208, 210, 212, 216, 220, 224, 226, 228, 230, 232, 234, 240, 242, 244, 246,
}

var tmFromTo = []int8{
	73, 74, 16, 24, 50, 24, 52, 24, 62, 24, 31, 35, 50, 35, 52, 35,
	62, 35, 2, 7, 36, 7, 37, 7, 50, 55, 52, 55, 62, 55, 25, 28,
	63, 67, 32, 49, 69, 70, 23, 26, 29, 33, 51, 62, 40, 54, 31, 36,
	54, 36, 31, 37, 54, 37, 1, 2, 2, 8, 36, 8, 37, 8, 2, 9,
	36, 9, 37, 9, 2, 10, 36, 10, 37, 10, 2, 11, 36, 11, 37, 11,
	2, 12, 36, 12, 37, 12, 31, 38, 2, 13, 37, 13, 38, 13, 2, 14,
	36, 14, 37, 14, 31, 39, 1, 3, 16, 25, 50, 56, 52, 56, 62, 56,
	31, 40, 50, 57, 52, 57, 62, 57, 50, 58, 52, 58, 62, 58, 0, 73,
	0, 1, 1, 4, 1, 5, 1, 6, 2, 15, 26, 29, 23, 27, 2, 16,
	37, 52, 2, 17, 36, 50, 37, 17, 2, 18, 36, 18, 37, 18, 2, 19,
	37, 19, 38, 53, 2, 20, 36, 20, 37, 20, 2, 21, 36, 21, 37, 21,
	2, 22, 36, 22, 37, 22, 50, 59, 52, 63, 62, 66, 50, 60, 52, 60,
	62, 60, 50, 61, 52, 61, 62, 61, 26, 30, 29, 34, 26, 31, 29, 31,
	31, 41, 31, 42, 31, 43, 54, 65, 31, 44, 54, 44, 31, 45, 54, 45,
	31, 46, 31, 47, 31, 48, 67, 69, 15, 23, 53, 64, 66, 68, 71, 72,
	70, 71, 28, 32, 36, 51,
}

var tmRuleLen = []int8{
	1, 1, 1, 1, 2, 0, 1, 1, 1, 4, 5, 2, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 0, 1, 1, 3, 1, 1, 5, 8, 1, 1, 1, 3, 0,
	0, 0, 0, 0, 2,
}

var tmRuleSymbol = []int32{
	25, 26, 27, 28, 29, 29, 30, 30, 31, 32, 33, 34, 34, 35, 36, 36,
	37, 38, 38, 39, 40, 41, 42, 42, 42, 42, 42, 42, 43, 43, 44, 44,
	45, 46, 47, 47, 48, 48, 49, 50, 50, 51, 52, 53, 53, 54, 55, 56,
	57, 58, 59, 60, 61,
}
