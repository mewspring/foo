// generated by Textmapper; DO NOT EDIT

package ast

import (
	"fmt"

	"github.com/mewspring/foo/none/mini"
)

func ToLlvmNode(n Node) LlvmNode {
	if n == nil {
		return nil
	}
	switch n.Type() {
	case mini.AddInst:
		return &AddInst{n}
	case mini.Args:
		return &Args{n}
	case mini.BasicBlock:
		return &BasicBlock{n}
	case mini.CallInst:
		return &CallInst{n}
	case mini.FloatKind:
		return &FloatKind{n}
	case mini.FloatType:
		return &FloatType{n}
	case mini.FooBar:
		return &FooBar{n}
	case mini.FooBaz:
		return &FooBaz{n}
	case mini.FuncBody:
		return &FuncBody{n}
	case mini.FuncDef:
		return &FuncDef{n}
	case mini.FuncHeader:
		return &FuncHeader{n}
	case mini.FuncMetadata:
		return &FuncMetadata{n}
	case mini.GlobalIdent:
		return &GlobalIdent{n}
	case mini.InstMetadata:
		return &InstMetadata{n}
	case mini.IntConst:
		return &IntConst{n}
	case mini.IntLit:
		return &IntLit{n}
	case mini.IntType:
		return &IntType{n}
	case mini.LocalDefInst:
		return &LocalDefInst{n}
	case mini.LocalIdent:
		return &LocalIdent{n}
	case mini.Module:
		return &Module{n}
	case mini.OperandBundles:
		return &OperandBundles{n}
	case mini.Params:
		return &Params{n}
	case mini.RetTerm:
		return &RetTerm{n}
	case mini.TypeValue:
		return &TypeValue{n}
	case mini.VoidType:
		return &VoidType{n}
	}
	panic(fmt.Sprintf("unknown node type %v", n.Type()))
}
