// generated by Textmapper; DO NOT EDIT

package mini

import (
	"fmt"
)

// Token is an enum of all terminal symbols of the llvm language.
type Token int

// Token values.
const (
	UNAVAILABLE Token = iota-1
	EOI

	INVALID_TOKEN
	GLOBAL_IDENT_TOK
	LOCAL_IDENT_TOK
	INT_TYPE_TOK
	INT_LIT_TOK
	LPAREN
	RPAREN
	LBRACE
	RBRACE
	COMMA
	ASSIGN
	ADD // add
	CALL // call
	DEFINE // define
	DOUBLE // double
	FLOAT // float
	FP128 // fp128
	HALF // half
	PPC_FP128 // ppc_fp128
	RET // ret
	VOID // void
	X86_FP80 // x86_fp80
	FOOBAR // foobar
	FOOBAZ // foobaz

	NumTokens
)

var tokenStr = [...]string{
	"EOI",

	"INVALID_TOKEN",
	"GLOBAL_IDENT_TOK",
	"LOCAL_IDENT_TOK",
	"INT_TYPE_TOK",
	"INT_LIT_TOK",
	"LPAREN",
	"RPAREN",
	"LBRACE",
	"RBRACE",
	"COMMA",
	"ASSIGN",
	"add",
	"call",
	"define",
	"double",
	"float",
	"fp128",
	"half",
	"ppc_fp128",
	"ret",
	"void",
	"x86_fp80",
	"foobar",
	"foobaz",
}

func (tok Token) String() string {
	if tok >= 0 && int(tok) < len(tokenStr) {
		return tokenStr[tok]
	}
	return fmt.Sprintf("token(%d)", tok)
}
